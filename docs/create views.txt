create view kagle.com food ingredient database

Structure de la vue SECTIONS_INGREDIENTS
CREATE VIEW sections_ingredients AS SELECT
    sections.id AS section_id,
    sections.title AS section_name,
    ingredients.id AS ingredient_id,
    ingredients.name AS ingredient_name,
    ingredients.quantity,    
    measurements.id AS measurement_id,
    measurements.unit
FROM
    `sections`
INNER JOIN ingredient_section ON sections.id = ingredient_section.section_id
INNER JOIN ingredients ON ingredient_section.ingredient_id = ingredients.id
INNER JOIN measurements ON ingredients.measurement_id = measurements.id

Structure de la vue SECTIONS_INGREDIENTS VERSION 2
CREATE VIEW sections_ingredients AS SELECT
    sections.id AS section_id,
    sections.title AS section_name,
    ingredients.id AS ingredient_id,
    ingredients.name AS ingredient_name,  
    measurements.id AS measurement_id,
    measurements.name AS measurement_name,
    ingredient_section.quantity AS quantity,
    recipes.id AS recipe_id,
    recipes.name as recipe_name
FROM
    `sections`
INNER JOIN ingredient_section ON sections.id = ingredient_section.section_id
INNER JOIN ingredients ON ingredient_section.ingredient_id = ingredients.id
INNER JOIN measurements ON ingredient_section.measurement_id = measurements.id
INNER JOIN recipes ON ingredient_section.recipe_id = recipes.id



Structure de la vue sub_categories

CREATE VIEW subcategories AS SELECT

sub_categories.id as subcategory_id,
sub_categories.name as subcategory_name,
recipe_subcategory.id AS recipe_subcategory_id,
sub_categories.id,
recipes.id AS recipe_id,
    recipes.name as recipe_name


Structure de la vue user_recipes

CREATE VIEW user_recipes AS SELECT 
recipes.id, 
recipes.name, 
recipes.description, 
recipes.image, 
recipes.time, 
recipes.serves, 
recipes.rating, 
categories.id as category_id, 
users.id as user_id,
users,image AS user-image
FROM `recipes` 
INNER JOIN users ON recipes.user_id = users.id 
INNER JOIN categories ON recipes.category_id = categories.id;



# Get a single row from the "customers" table (where "123" is the ID)
	GET http://api.example.com/users/1/ retourne infos de lutilisateur
	
	GET http://api.example.com/recipes/user_id/1(de lutilisateur)/ retourne toute les recttes de lutilisateur



	
	


CREATE VIEW recipe_settings AS 
SELECT
    settings.id AS setting_id,
    fonts.id AS font_id,
    borders.id AS border_id,
    background_colors.id AS backgroundcolor_id,
    font_styles.id AS fontstyle_id,
    font_colors.id AS fontcolor_id,
    fonts.size AS font_size,
    background_colors.name AS backgroundcolor_name,
    font_styles.name AS font_name,
    font_colors.name AS font_color,
    border_styles.id AS border_style_id,
    borders.width AS border_width,
    border_styles.name AS border_name 
FROM
    `settings`

INNER JOIN borders ON settings.id = borders.setting_id
INNER JOIN fonts ON settings.id = fonts.setting_id
INNER JOIN background_colors ON settings.id = background_colors.setting_id
INNER JOIN border_styles ON borders.border_style_id = border_styles.id

INNER JOIN font_styles ON fonts.font_style_id = font_styles.id
INNER JOIN font_colors ON fonts.font_color_id = font_colors.id; 